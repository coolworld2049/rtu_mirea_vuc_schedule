version: '3.9'

services:
  redis:
    image: bitnami/redis:latest
    hostname: schedule_service-redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_PORT_NUMBER: ${SCHEDULE_SERVICE_REDIS_PORT}
    ports:
    - ${SCHEDULE_SERVICE_REDIS_PORT}
    healthcheck:
      test: redis-cli -p ${SCHEDULE_SERVICE_REDIS_PORT} ping
      interval: 5s
      timeout: 2s
      retries: 3
  workbook-updater:
    build:
      context: .
      dockerfile: Dockerfile
      target: workbook_updater
    restart: on-failure
    hostname: schedule_service-workbook_updater
    env_file:
    - .env
    environment:
      SCHEDULE_SERVICE_LOG_LEVEL: DEBUG
    volumes:
    - ./workbook_updater/files:/app/workbook_updater/files
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: schedule_service
    hostname: schedule_service-api
    restart: always
    labels:
      reload.api: "true"
    env_file:
    - .env
    ports:
    - ${SCHEDULE_SERVICE_PORT}
    depends_on:
      redis:
        condition: service_healthy
      workbook-updater:
        condition: service_started
    environment:
      SCHEDULE_SERVICE_HOST: 0.0.0.0
      SCHEDULE_SERVICE_WORKERS: 1
      SCHEDULE_SERVICE_RELOAD: false
      SCHEDULE_SERVICE_REDIS_HOST: schedule_service-redis
      SCHEDULE_SERVICE_LOG_LEVEL: INFO
      TZ: Europe/Moscow
    deploy:
      mode: replicated
      replicas: 4
      endpoint_mode: vip
  api-loadbalancer:
    image: nginx:latest
    hostname: schedule_service-api-loadbalancer
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
    - api
    ports:
    - ${SCHEDULE_SERVICE_PORT}:8080
  livereloader:
    image: apogiatzis/livereloading
    hostname: schedule_service-livereloader
    privileged: true
    depends_on:
    - api
    environment:
      RELOAD_LABEL: reload.api
      RESTART_TIMEOUT: 2
      OBSERVER_TYPE: 1
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./workbook_updater/files:/app/workbook_updater/files
