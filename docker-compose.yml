version: '3.9'

services:
  redis:
    image: bitnami/redis:latest
    user: root
    hostname: schedule-service-redis
    restart: always
    command: /opt/bitnami/scripts/redis/run.sh --maxclients 100000
    ports:
      - ${SCHEDULE_SERVICE_REDIS_PORT}
    environment:
      REDIS_AOF_ENABLED: no
      ALLOW_EMPTY_PASSWORD: yes
      REDIS_PORT_NUMBER: ${SCHEDULE_SERVICE_REDIS_PORT}
    volumes:
      - ~/volumes/rtu_mirea_vuc_schedule/redis_data:/bitnami/redis/data
  workbook-updater:
    build:
      context: .
      dockerfile: Dockerfile
      target: workbook_updater
    restart: on-failure
    hostname: workbook-updater
    env_file:
      - .env
    volumes:
      - ./workbook_updater/files:/app/workbook_updater/files
  schedule-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: schedule_service
    restart: always
    hostname: schedule-service
    labels:
      reload.api: "true"
    env_file:
      - .env
    ports:
      - ${SCHEDULE_SERVICE_PORT}
    depends_on:
      redis:
        condition: service_started
      workbook-updater:
        condition: service_started
    environment:
      SCHEDULE_SERVICE_HOST: 0.0.0.0
      SCHEDULE_SERVICE_WORKERS: 1
      SCHEDULE_SERVICE_RELOAD: False
      SCHEDULE_SERVICE_REDIS_HOST: redis
      SCHEDULE_SERVICE_LOG_LEVEL: INFO
      TZ: Europe/Moscow
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
  livereloader:
    image: apogiatzis/livereloading
    privileged: true
    hostname: schedule-service-livereloader
    depends_on:
      schedule-service:
        condition: service_started
    environment:
      RELOAD_LABEL: reload.api
      RESTART_TIMEOUT: 2
      OBSERVER_TYPE: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workbook_updater/files:/app/workbook_updater/files
