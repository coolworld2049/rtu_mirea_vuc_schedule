stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: python:3.11.6-slim-bullseye
  only:
    refs:
      - master
  script:
    - pip install poetry==1.4.2
    - poetry use env 3.11
    - poetry install
    - cp .env.example .env
    - poetry run pytest

build:
  image: docker:latest
  only:
    refs:
    - master
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - export IMAGE="coolworldocker/schedule-service"
    - docker build --push -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG  --workdir . --file ./Dockerfile --build-context . --target schedule-service
    - export IMAGE="coolworldocker/workbook-updater"
    - docker build --push -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG  --workdir . --file ./Dockerfile --build-context . --target workbook-updater
  stage: build

deploy_production:
  image: docker:latest
  only:
    refs:
    - master
  script:
      - echo "NotImplemented"
  stage: deploy
